{"version":3,"sources":["services/api.js","Components/Button.js","Components/Product.js","services/Loading.js","Components/Category.js","Pages/CategoriesList.js","Components/Input.js","Pages/ProductList.js","Pages/HomePage.js","Components/ItemCart.js","Components/ShoppingCart.js","Components/ProductDetailComponent.js","Pages/ProductDetail.js","App.js","serviceWorker.js","index.js"],"names":["getCategories","a","fetch","response","json","data","getProductsFromCategoryAndQuery","categoryId","query","catQuery","Button","this","props","onClick","nameButton","testId","data-testid","type","Component","Product","shipping","free_shipping","product","search","title","thumbnail","price","id","className","to","pathname","state","busca","src","alt","handleShipping","Loading","Category","category","htmlFor","name","value","CategoriesList","list","loading","api","setNewState","newState","setState","map","eachCat","key","Input","onChange","placeholder","ProductList","onClickButton","bind","handleInput","onClickCategory","resetState","onClickCart","valueInput","products","cart","JSON","parse","localStorage","getItem","prod","push","setItem","stringify","categoriesId","getAll","results","valueOfInput","event","input","target","HomePage","rel","href","crossOrigin","hidden","ItemCart","decrease","increase","quantity","ButtonDel","parseFloat","toFixed","ShoppingCart","clearCart","removeCart","arrCart","Object","entries","clear","document","location","reload","item","console","log","newCart","each","removeItem","itens","length","undefined","ProductDetailComponent","ProductDetails","match","idprod","params","arr","filter","num","App","path","render","ProductDetail","component","Boolean","window","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uaAAO,SAAeA,IAAtB,+B,4CAAO,8BAAAC,EAAA,4DACO,oDADP,SAEkBC,MADX,qDADP,cAECC,EAFD,gBAGcA,EAASC,OAHvB,cAGCC,EAHD,yBAIEA,GAJF,4C,sBAOA,SAAeC,EAAtB,oC,4CAAO,WAA+CC,EAAYC,GAA3D,mBAAAP,EAAA,6DACCQ,EADD,iEACsEF,EADtE,cACsFC,GADtF,SAEkBN,MAAMO,GAFxB,cAECN,EAFD,gBAGcA,EAASC,OAHvB,cAGCC,EAHD,yBAIEA,GAJF,4C,kCCJcK,E,uKACT,IAAD,EACiCC,KAAKC,MAArCC,EADD,EACCA,QAASC,EADV,EACUA,WAAYC,EADtB,EACsBA,OAC7B,OACE,4BACEC,cAAcD,EACdE,KAAK,SACLJ,QAAUA,GAETC,O,GAT2BI,aCwDrBC,E,6KArDEC,GACb,IAA+B,IAA3BA,EAASC,cACX,OAAO,uBAAGL,cAAY,iBAAf,qB,+BAID,IAAD,EAC8BL,KAAKC,MAAlCU,EADD,EACCA,QAASC,EADV,EACUA,OAAQV,EADlB,EACkBA,QACjBW,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,UAAWC,EAAwBJ,EAAxBI,MAAOC,EAAiBL,EAAjBK,GAAIP,EAAaE,EAAbF,SAErC,OACE,yBAAKQ,UAAU,qBACb,kBAAC,OAAD,CACEC,GAAK,CACHC,SAAS,mBAAD,OAAqBH,GAC7BI,MAAO,CACLC,MAAOT,KAIX,yBAAKP,cAAY,uBACf,yBAAKA,cAAY,WACf,4BAAMQ,GACN,yBAAKS,IAAMR,EAAYS,IAAI,0BACzBvB,KAAKwB,eAAef,IAExB,2BAAG,4CAAcM,OAGrB,2BACE,kBAAC,EAAD,CACEX,OAAO,sBACPD,WAAW,cACXD,QAAUA,U,GAlCAK,aCHDkB,E,uKAEjB,OACE,6BACE,kD,GAJ6BlB,aCChBmB,E,uKACT,IAAD,EAC2B1B,KAAKC,MAA/B0B,EADD,EACCA,SAAUX,EADX,EACWA,GAAId,EADf,EACeA,QACtB,OACE,2BAAO0B,QAAUZ,GACf,2BACEa,KAAOb,EACPV,KAAK,SACLD,cAAY,WACZW,GAAKA,EACLc,MAAQH,EACRzB,QAAUA,EACVe,UAAU,wB,GAZkBV,aCGjBwB,E,kDACnB,aAAe,IAAD,8BACZ,gBAEKX,MAAQ,CACXY,KAAM,GACNC,SAAS,GALC,E,yLAUJ5C,EAAkB6C,E,SACH7C,I,OAAjBsC,E,OACN3B,KAAKmC,YAAYR,G,wIAGPS,GACVpC,KAAKqC,SAAS,CACZL,KAAMI,EACNH,SAAS,M,+BAIH,IACA/B,EAAYF,KAAKC,MAAjBC,QADD,EAEmBF,KAAKoB,MAAvBY,EAFD,EAECA,KACR,OAAgB,IAHT,EAEOC,QACgB,kBAAC,EAAD,MAE5B,4BACGD,EAAKM,KAAI,SAACC,GAAD,OACR,uBAAGC,IAAMD,EAAQvB,IACf,kBAAC,EAAD,CAAUA,GAAKuB,EAAQvB,GAAKW,SAAWY,EAAQV,KAAO3B,QAAUA,a,GA/BhCK,aCHvBkC,E,uKACT,IAAD,EAC2BzC,KAAKC,MAA/ByC,EADD,EACCA,SAAUC,EADX,EACWA,YAClB,OACE,2BACE3B,GAAG,cACHX,cAAY,cACZC,KAAK,OACLoC,SAAWA,EACXC,YAAcA,Q,GATapC,aCyGpBqC,E,kDApGb,aAAe,IAAD,8BACZ,gBAEKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAClB,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,gBAEnB,EAAK1B,MAAQ,CACX+B,WAAY,GACZvD,WAAY,GACZwD,SAAU,GACVC,KAAMC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,IAbxC,E,wDAiBFC,GAAO,IACTL,EAASrD,KAAKoB,MAAdiC,KACRA,EAAKM,KAAKD,GACV1D,KAAKqC,SAAS,CACZgB,SAEFG,aAAaI,QAAQ,CAACF,EAAK1C,IAAKsC,KAAKO,UAAUR,M,+EAG3BS,G,gFACZX,EAAenD,KAAKoB,MAApB+B,W,SACaxD,EAAgCmE,EAAcX,G,OAA7DY,E,OACN/D,KAAKqC,SAAS,CACZzC,WAAYkE,EACZV,SAAUW,EAAOC,U,oLAIDC,G,2FACZjE,KAAKiD,a,cACHrD,EAAeI,KAAKoB,MAApBxB,W,SACoBD,EAAgCC,EAAYqE,G,OAAlE5E,E,OACE2E,EAAY3E,EAAZ2E,QACRhE,KAAKqC,SAAS,CACZc,WAAYc,EACZb,SAAUY,I,yIAIFE,GACV,IAAMC,EAAQD,EAAME,OAAOtC,MAC3B9B,KAAKqC,SAAS,CAAEc,WAAYgB,M,6IAI5BnE,KAAKqC,SAAS,CACZzC,WAAY,K,qIAIN,IAAD,SAC0BI,KAAKoB,MAA9BgC,EADD,EACCA,SAAUD,EADX,EACWA,WAClB,OACE,6BACE,yBAAKlC,UAAU,0BACb,yBAAKA,UAAU,sBACb,kBAAC,EAAD,CACEyB,SAAW1C,KAAK+C,YAChBJ,YAAY,8DAGhB,yBAAK1B,UAAU,uBACb,kBAAC,EAAD,CACEb,OAAO,eACPD,WAAW,SACXD,QAAU,kBAAM,EAAK2C,cAAcM,QAIzC,6BAASlC,UAAU,wBACjB,6BAASA,UAAU,2BACjB,0CACA,kBAAC,EAAD,CACEf,QAAU,SAACgE,GAAD,OAAW,EAAKlB,gBAAgBkB,EAAME,OAAOvC,UAG3D,6BAASZ,UAAU,6BACfmC,EAASd,KAAI,SAACoB,GAAD,OACb,yBAAKlB,IAAMkB,EAAK1C,IACd,kBAAC,EAAD,CACEL,QAAU+C,EACV9C,OAASwC,EACTlD,QAAU,kBAAM,EAAKgD,YAAYQ,iB,GA1FzBnD,aC2BX8D,E,uKA5BX,OACE,yBAAKpD,UAAU,sBACb,0BACEqD,IAAI,aACJC,KAAK,iFACLC,YAAY,cAEd,gCACE,uBAAGC,QAAM,EAACpE,cAAY,wBAAtB,6DAIF,0BAAMY,UAAU,iBACd,yBAAKA,UAAU,gBACb,mDACA,kBAAC,IAAD,CAAMC,GAAG,kBACP,4BAAQb,cAAY,uBAAuBC,KAAK,UAC9C,uBAAGW,UAAU,2BAInB,kBAAC,EAAD,Y,GAvBaV,aC2ERmE,E,kDA1Eb,aAAe,IAAD,8BACZ,gBAEKC,SAAW,EAAKA,SAAS7B,KAAd,gBAChB,EAAK8B,SAAW,EAAKA,SAAS9B,KAAd,gBAEhB,EAAK1B,MAAQ,CACXyD,SAAU,GAPA,E,uDAWF,IACFA,EAAa7E,KAAKoB,MAAlByD,SAEJA,EADS,EAEX7E,KAAKqC,SAAS,CACZwC,SAAWA,EAAW,IAGxB7E,KAAKqC,SAAS,CACZwC,SAAU,M,iCAKJ,IACFA,EAAa7E,KAAKoB,MAAlByD,SACR7E,KAAKqC,SAAS,CACZwC,SAAWA,EAAW,M,+BAIhB,IACAA,EAAa7E,KAAKoB,MAAlByD,SADD,EAEwB7E,KAAKC,MAA5BU,EAFD,EAECA,QAASmE,EAFV,EAEUA,UACTjE,EAA4BF,EAA5BE,MAAOE,EAAqBJ,EAArBI,MAAOD,EAAcH,EAAdG,UAEtB,OACE,6BACE,yBAAKG,UAAU,sBACb,wBAAIZ,cAAY,8BAA+BQ,GAC/C,6BACE,yBAAKS,IAAMR,EAAYS,IAAMV,IAC7B,wCAAWkE,WAAWF,EAAW9D,GAAOiE,QAPpC,MASN,uBAAG3E,cAAY,kCACXwE,IAGN,kBAAC,EAAD,CACEzE,OAAO,4BACPF,QAAUF,KAAK2E,SACfxE,WAAW,MAEX2E,EACF,kBAAC,EAAD,CACE1E,OAAO,4BACPF,QAAUF,KAAK4E,SACfzE,WAAW,W,GA3DEI,aC0ER0E,E,kDAxEb,aAAe,IAAD,uBACZ,gBAEKC,UAAY,EAAKA,UAAUpC,KAAf,gBACjB,EAAKqC,WAAa,EAAKA,WAAWrC,KAAhB,gBAClB,IAAMsC,EAAUC,OAAOC,QAAQ9B,cALnB,OAMZ,EAAKpC,MAAQ,CACXiC,KAAM+B,GAAW,IAPP,E,wDAYZ5B,aAAa+B,QACbC,SAASC,SAASC,W,iCAGTC,GAAO,IACRtC,EAASrD,KAAKoB,MAAdiC,KACRuC,QAAQC,IAAI,QAASxC,GACrB,IAAMyC,EAAUzC,EAAKf,KAAI,SAACyD,GAAD,OAAWA,EAAK/E,KAAO2E,EAAK3E,GAAK+E,EAAOvC,aAAawC,WAAWD,MACzFH,QAAQC,IAAI,SAAUxC,GACtBrD,KAAKqC,SAAS,CACZgB,KAAMyC,M,+BAKA,IAGJG,EAHG,OACC5C,EAASrD,KAAKoB,MAAdiC,KAyBR,OApBE4C,EADE5C,EAAK6C,OAHI,EAIH7C,EAAKf,KAAI,SAACqD,GAChB,YAAaQ,IAATR,EAEA,kBAAC,EAAD,CACEnD,IAAMmD,EAAK3E,GACXL,QAAUgF,EACVb,UAAY,kBAAC,EAAD,CACV1E,OAAO,gBACPD,WAAW,UACXD,QAAU,kBAAM,EAAKiF,WAAWQ,QAKjCM,KAGD,uBAAG5F,cAAY,+BAAf,8BAIR,yBAAKY,UAAU,sBACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,4CACA,4BAAQZ,KAAK,SAASJ,QAAU,kBAAM,EAAKgF,cAA3C,mBACA,yBAAKjE,UAAU,yBACZgF,GAEH,2CACA,4BACE3F,KAAK,UADP,yB,GA/DmBC,aCsCZ6F,E,uKArCH,IAAD,EACsBpG,KAAKC,MAA1BU,EADD,EACCA,QAAST,EADV,EACUA,QACTW,EAA4BF,EAA5BE,MAAOC,EAAqBH,EAArBG,UAAWC,EAAUJ,EAAVI,MAC1B,OACE,6BACE,kBAAC,IAAD,CAAMG,GAAG,kBACP,4BAAQb,cAAY,uBAAuBC,KAAK,UAAhD,SAIF,yBAAKD,cAAY,WACf,wBAAIA,cAAY,uBAAwBQ,GACxC,yBAAKS,IAAMR,EAAYS,IAAI,0BAC3B,4CAAcR,IACd,2BACE,kBAAC,EAAD,CACEX,OAAO,6BACPD,WAAW,cACXD,QAAUA,W,GAnBaK,aC4CtB8F,E,kDA5Cb,aAAe,IAAD,8BACZ,gBAEKnD,YAAc,EAAKA,YAAYJ,KAAjB,gBAEnB,EAAK1B,MAAQ,CACXiC,KAAMC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,IANxC,E,wDAUFC,GAAO,IACTL,EAASrD,KAAKoB,MAAdiC,KACRA,EAAKM,KAAKD,GACV1D,KAAKqC,SAAS,CACZgB,SAGFG,aAAaI,QAAQ,OAAQN,KAAKO,UAAUR,M,+BAGpC,IAAD,SACqBrD,KAAKC,MAAzBqG,EADD,EACCA,MAAOb,EADR,EACQA,SAEPc,EADWD,EAAXE,OACAD,OAEFE,EADYhB,EAASrE,MAAnBC,MACUqF,QAAO,SAACC,GAAD,OAASA,EAAI3F,KAAOuF,KAC7C,OACE,6BACGE,EAAInE,KAAI,SAACqD,GAAD,OACP,kBAAC,EAAD,CACEzF,QAAU,kBAAM,EAAKgD,YAAYyC,IACjChF,QAAUgF,EACVnD,IAAMmD,EAAK3E,a,GAjCMT,a,kBCqBdqG,MAff,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,SAAD,KACE,kBAAC,QAAD,CACEC,KAAK,gDACLC,OAAS,SAAC7G,GAAD,OAAW,kBAAC8G,EAAmB9G,MAE1C,kBAAC,QAAD,CAAO4G,KAAK,uCAAuCG,UAAY/B,IAC/D,kBAAC,QAAD,CAAO4B,KAAK,0BAA0BG,UAAY3C,OCPtC4C,QACW,cAA7BC,OAAOzB,SAAS0B,UAEkB,UAA7BD,OAAOzB,SAAS0B,UAEhBD,OAAOzB,SAAS0B,SAASb,MAC1B,2DCZNc,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEF7B,SAAS8B,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNlC,QAAQkC,MAAMA,EAAMC,c","file":"static/js/main.3f9a021b.chunk.js","sourcesContent":["export async function getCategories() {\n  const url = 'https://api.mercadolibre.com/sites/MLB/categories';\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const catQuery = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`;\n  const response = await fetch(catQuery);\n  const data = await response.json();\n  return data;\n}\n\nexport async function getProductsFromQuery(query) {\n  const productQuery = `https://api.mercadolibre.com/sites/MLB/search?q=${query}`;\n  const response = await fetch(productQuery);\n  const data = await response.json();\n  return data;\n}\n\nexport async function getProductsFromId(id) {\n  const productId = `https://api.mercadolibre.com/sites/MLB/search?category=${id}`;\n  const response = await fetch(productId);\n  const data = await response.json();\n  return data;\n}\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nexport default class Button extends Component {\n  render() {\n    const { onClick, nameButton, testId } = this.props;\n    return (\n      <button\n        data-testid={ testId }\n        type=\"button\"\n        onClick={ onClick }\n      >\n        {nameButton}\n      </button>\n    );\n  }\n}\n\n// Button.defaultProps = {\n//   nameButton: propTypes.string,\n//   testId: propTypes.string,\n// };\n\nButton.propTypes = {\n  onClick: propTypes.func.isRequired,\n  nameButton: propTypes.string.isRequired,\n  testId: propTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport Button from './Button';\n\nclass Product extends Component {\n  handleShipping(shipping) {\n    if (shipping.free_shipping === true) {\n      return <p data-testid=\"free-shipping\">Frete Grátis</p>;\n    }\n  }\n\n  render() {\n    const { product, search, onClick } = this.props;\n    const { title, thumbnail, price, id, shipping } = product;\n\n    return (\n      <div className=\"product-list-each\">\n        <Link\n          to={ {\n            pathname: `/product-detail/${id}`,\n            state: {\n              busca: search,\n            },\n          } }\n        >\n          <div data-testid=\"product-detail-link\">\n            <div data-testid=\"product\">\n              <h5>{ title }</h5>\n              <img src={ thumbnail } alt=\"fotografia do produto\" />\n              { this.handleShipping(shipping) }\n            </div>\n            <p><span>{`R$: ${price}`}</span></p>\n          </div>\n        </Link>\n        <p>\n          <Button\n            testId=\"product-add-to-cart\"\n            nameButton=\"Add to Cart\"\n            onClick={ onClick }\n          />\n        </p>\n      </div>\n    );\n  }\n}\n\nProduct.propTypes = {\n  onClick: propTypes.func.isRequired,\n  search: propTypes.instanceOf(Array).isRequired,\n  product: propTypes.shape({\n    title: propTypes.string,\n    thumbnail: propTypes.string,\n    price: propTypes.number,\n    id: propTypes.string,\n    shipping: propTypes.object,\n  }).isRequired,\n};\n\nexport default Product;\n","import React, { Component } from 'react';\n\nexport default class Loading extends Component {\n  render() {\n    return (\n      <div>\n        <h4>Carregando...</h4>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nexport default class Category extends Component {\n  render() {\n    const { category, id, onClick } = this.props;\n    return (\n      <label htmlFor={ id }>\n        <input\n          name={ id } // capturo o name no productList\n          type=\"button\"\n          data-testid=\"category\"\n          id={ id }\n          value={ category } // texto dentro de cada button\n          onClick={ onClick }\n          className=\"category-input\"\n        />\n        {/* { category } */}\n      </label>\n    );\n  }\n}\n\nCategory.propTypes = {\n  category: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  onClick: propTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport * as api from '../services/api';\nimport Loading from '../services/Loading';\nimport Category from '../Components/Category';\n\nexport default class CategoriesList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      list: [],\n      loading: false,\n    };\n  }\n\n  async componentDidMount() {\n    const { getCategories } = api;\n    const category = await getCategories();\n    this.setNewState(category);\n  }\n\n  setNewState(newState) {\n    this.setState({\n      list: newState,\n      loading: true,\n    });\n  }\n\n  render() {\n    const { onClick } = this.props;\n    const { list, loading } = this.state;\n    if (loading === false) return <Loading />;\n    return (\n      <ul>\n        {list.map((eachCat) => (\n          <p key={ eachCat.id }>\n            <Category id={ eachCat.id } category={ eachCat.name } onClick={ onClick } />\n          </p>\n        ))}\n      </ul>\n    );\n  }\n}\n\nCategoriesList.propTypes = { onClick: propTypes.func.isRequired };\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nexport default class Input extends Component {\n  render() {\n    const { onChange, placeholder } = this.props;\n    return (\n      <input\n        id=\"query-input\"\n        data-testid=\"query-input\"\n        type=\"text\"\n        onChange={ onChange }\n        placeholder={ placeholder }\n      />\n    );\n  }\n}\n\nInput.propTypes = {\n  onChange: propTypes.func.isRequired,\n  placeholder: propTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport Product from '../Components/Product';\nimport CategoriesList from './CategoriesList';\nimport Input from '../Components/Input';\nimport Button from '../Components/Button';\n\nclass ProductList extends Component {\n  constructor() {\n    super();\n\n    this.onClickButton = this.onClickButton.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.onClickCategory = this.onClickCategory.bind(this);\n    this.resetState = this.resetState.bind(this);\n    this.onClickCart = this.onClickCart.bind(this);\n\n    this.state = {\n      valueInput: '',\n      categoryId: '',\n      products: [],\n      cart: JSON.parse(localStorage.getItem('cart')) || [],\n    };\n  }\n\n  onClickCart(prod) {\n    const { cart } = this.state;\n    cart.push(prod);\n    this.setState({\n      cart,\n    });\n    localStorage.setItem([prod.id], JSON.stringify(cart));\n  }\n\n  async onClickCategory(categoriesId) {\n    const { valueInput } = this.state;\n    const getAll = await getProductsFromCategoryAndQuery(categoriesId, valueInput);\n    this.setState({\n      categoryId: categoriesId,\n      products: getAll.results,\n    });\n  }\n\n  async onClickButton(valueOfInput) {\n    await this.resetState();\n    const { categoryId } = this.state;\n    const getCategories = await getProductsFromCategoryAndQuery(categoryId, valueOfInput);\n    const { results } = getCategories;\n    this.setState({\n      valueInput: valueOfInput,\n      products: results,\n    });\n  }\n\n  handleInput(event) {\n    const input = event.target.value;\n    this.setState({ valueInput: input });\n  }\n\n  async resetState() {\n    this.setState({\n      categoryId: '',\n    });\n  }\n\n  render() {\n    const { products, valueInput } = this.state;\n    return (\n      <div>\n        <div className=\"product-list-container\">\n          <div className=\"product-list-input\">\n            <Input\n              onChange={ this.handleInput }\n              placeholder=\"Digite algum termo de pesquisa ou escolha uma categoria.\"\n            />\n          </div>\n          <div className=\"product-list-button\">\n            <Button\n              testId=\"query-button\"\n              nameButton=\"Buscar\"\n              onClick={ () => this.onClickButton(valueInput) }\n            />\n          </div>\n        </div>\n        <section className=\"product-list-section\">\n          <section className=\"product-list-categories\">\n            <h4>Categorias</h4>\n            <CategoriesList\n              onClick={ (event) => this.onClickCategory(event.target.name) }\n            />\n          </section>\n          <section className=\"product-list-all-products\">\n            { products.map((prod) => (\n              <div key={ prod.id }>\n                <Product\n                  product={ prod }\n                  search={ products }\n                  onClick={ () => this.onClickCart(prod) }\n                />\n              </div>\n            ))}\n          </section>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default ProductList;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProductList from './ProductList';\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div className=\"homepage-container\">\n        <link\n          rel=\"stylesheet\"\n          href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\n          crossOrigin=\"anonymous\"\n        />\n        <header>\n          <p hidden data-testid=\"home-initial-message\">\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </p>\n        </header>\n        <main className=\"homepage-main\">\n          <nav className=\"homepage-nav\">\n            <h2>Projeto Agile Store</h2>\n            <Link to=\"/shopping-cart\">\n              <button data-testid=\"shopping-cart-button\" type=\"button\">\n                <i className=\"fa fa-shopping-cart\" />\n              </button>\n            </Link>\n          </nav>\n          <ProductList />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\n\nclass ItemCart extends Component {\n  constructor() {\n    super();\n\n    this.decrease = this.decrease.bind(this);\n    this.increase = this.increase.bind(this);\n\n    this.state = {\n      quantity: 1,\n    };\n  }\n\n  decrease() {\n    const { quantity } = this.state;\n    const zero = 0;\n    if (quantity > zero) {\n      this.setState({\n        quantity: (quantity - 1),\n      });\n    } else {\n      this.setState({\n        quantity: 0,\n      });\n    }\n  }\n\n  increase() {\n    const { quantity } = this.state;\n    this.setState({\n      quantity: (quantity + 1),\n    });\n  }\n\n  render() {\n    const { quantity } = this.state;\n    const { product, ButtonDel } = this.props;\n    const { title, price, thumbnail } = product;\n    const two = 2;\n    return (\n      <div>\n        <div className=\"shopping-list-each\">\n          <h4 data-testid=\"shopping-cart-product-name\">{ title }</h4>\n          <div>\n            <img src={ thumbnail } alt={ title } />\n            <p>{ `R$ ${parseFloat(quantity * price).toFixed(two)}` }</p>\n          </div>\n          <p data-testid=\"shopping-cart-product-quantity\">\n            { quantity }\n          </p>\n        </div>\n        <Button\n          testId=\"product-decrease-quantity\"\n          onClick={ this.decrease }\n          nameButton=\"-\"\n        />\n        { ButtonDel }\n        <Button\n          testId=\"product-increase-quantity\"\n          onClick={ this.increase }\n          nameButton=\"+\"\n        />\n      </div>\n    );\n  }\n}\n\nItemCart.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    quantity: PropTypes.number,\n    thumbnail: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ItemCart;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from './Button';\nimport ItemCart from './ItemCart';\n\nclass ShoppingCart extends Component {\n  constructor() {\n    super();\n\n    this.clearCart = this.clearCart.bind(this);\n    this.removeCart = this.removeCart.bind(this);\n    const arrCart = Object.entries(localStorage);\n    this.state = {\n      cart: arrCart || [],\n    };\n  }\n\n  clearCart() {\n    localStorage.clear();\n    document.location.reload();\n  }\n\n  removeCart(item) {\n    const { cart } = this.state;\n    console.log('antes', cart);\n    const newCart = cart.map((each) => (each.id !== item.id ? each : localStorage.removeItem(each)));\n    console.log('depois', cart);\n    this.setState({\n      cart: newCart,\n    });\n    // document.location.reload();\n  }\n\n  render() {\n    const { cart } = this.state;\n    const zero = 0;\n    let itens;\n\n    if (cart.length > zero) {\n      itens = cart.map((item) => {\n        if (item !== undefined) {\n          return (\n            <ItemCart\n              key={ item.id }\n              product={ item }\n              ButtonDel={ <Button\n                testId=\"button-remove\"\n                nameButton=\"REMOVER\"\n                onClick={ () => this.removeCart(item) }\n              /> }\n            />\n          );\n        }\n        return itens;\n      });\n    } else {\n      itens = <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>;\n    }\n\n    return (\n      <div className=\"shopping-container\">\n        <Link to=\"/\">Home</Link>\n        <h1>Meu Carrinho</h1>\n        <button type=\"button\" onClick={ () => this.clearCart() }>Limpar Carrinho</button>\n        <div className=\"shopping-list-section\">\n          {itens}\n        </div>\n        <p>Valor Total:</p>\n        <button\n          type=\"button\"\n        >\n          Finalizar Compra\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ShoppingCart;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from './Button';\n\nclass ProductDetailComponent extends Component {\n  render() {\n    const { product, onClick } = this.props;\n    const { title, thumbnail, price } = product;\n    return (\n      <div>\n        <Link to=\"/shopping-cart\">\n          <button data-testid=\"shopping-cart-button\" type=\"button\">\n            Cart\n          </button>\n        </Link>\n        <div data-testid=\"product\">\n          <h5 data-testid=\"product-detail-name\">{ title }</h5>\n          <img src={ thumbnail } alt=\"fotografia do produto\" />\n          <span>{`R$: ${price}`}</span>\n          <p>\n            <Button\n              testId=\"product-detail-add-to-cart\"\n              nameButton=\"Add to Cart\"\n              onClick={ onClick }\n            />\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nProductDetailComponent.propTypes = {\n  onClick: propTypes.func.isRequired,\n  product: propTypes.shape({\n    title: propTypes.string,\n    thumbnail: propTypes.string,\n    price: propTypes.number,\n    id: propTypes.string,\n  }).isRequired,\n};\n\nexport default ProductDetailComponent;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport ProductDetailComponent from '../Components/ProductDetailComponent';\n\nclass ProductDetails extends Component {\n  constructor() {\n    super();\n\n    this.onClickCart = this.onClickCart.bind(this);\n\n    this.state = {\n      cart: JSON.parse(localStorage.getItem('cart')) || [],\n    };\n  }\n\n  onClickCart(prod) {\n    const { cart } = this.state;\n    cart.push(prod);\n    this.setState({\n      cart,\n    });\n\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }\n\n  render() {\n    const { match, location } = this.props;\n    const { params } = match;\n    const { idprod } = params;\n    const { busca } = location.state;\n    const arr = busca.filter((num) => num.id === idprod);\n    return (\n      <div>\n        {arr.map((item) => (\n          <ProductDetailComponent\n            onClick={ () => this.onClickCart(item) }\n            product={ item }\n            key={ item.id }\n          />))}\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  match: propTypes.shape().isRequired,\n  location: propTypes.shape().isRequired,\n};\n\nexport default ProductDetails;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport HomePage from './Pages/HomePage';\nimport ShoppingCart from './Components/ShoppingCart';\nimport ProductDetail from './Pages/ProductDetail';\nimport './HomePage.css';\nimport './ProductList.css';\nimport './ShoppingCart.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route\n          path=\"/Block14-Project-Agile/product-detail/:idprod\"\n          render={ (props) => <ProductDetail { ...props } /> }\n        />\n        <Route path=\"/Block14-Project-Agile/shopping-cart\" component={ ShoppingCart } />\n        <Route path=\"/Block14-Project-Agile/\" component={ HomePage } />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}